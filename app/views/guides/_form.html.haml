:javascript
  if( typeof window.google === 'undefined' ) {
    var script = document.createElement('script')
    script.src = "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_API']}&callback=initMap"
    document.head.appendChild(script)
  }

  function initMap() {
    var search_input = document.getElementById('location_box')
    if( search_input ) {
      var event = document.createEvent("HTMLEvents")
      event.initEvent("change", false, true)
      search_input.dispatchEvent(event)
    }
  }

- unless guide.errors.empty?
  - content_for :errors do
    %ul.errors
      - guide.errors.full_messages.each do |error|
        %li= error

= form_for(guide, html: { autocomplete: :off }) do |form|
  .mui-textfield
    = form.label :name
    = form.text_field :name, placeholder: 'The Best Little Voter Guide in Texas'

  .mui-textfield
    = form.label :election_date
    = form.date_field :election_date, value: guide.election_date || Chronic.parse('1st tuesday in november').to_date

  - unless guide.template_name.match /state|national/
    .mui-select
      = form.label 'Template'
      = form.select :template_name, options_for_select([ ['6x4 Guide', 'default'], ['Web Guide', 'web']], selected: guide.template_name)

  - if guide.new_record? && !current_user.guides.empty?
    %h2
      %i.fa.fa-clone
      Clone One Of Your Guides
    .mui-select
      %p
        %em Will clone all measures, contests, and fields to your new guide.
      - if current_user.admin?
        = select_tag :cloned_id, grouped_options_for_select({"Active Guides" => Guide.where(active: true).map{ |guide| [guide.name, guide.id] }, "Archived Guides" => Guide.where(active: false).map{ |guide| [guide.name, guide.id] } }, selected: params[:cloned_id]), prompt: 'Select guide to clone'
      - else
        = select_tag :cloned_id, grouped_options_for_select({"Active Guides" => current_user.guides.uniq.map{ |guide| [guide.name, guide.id] }, "Archived Guides" => current_user.archived_guides.uniq.map{ |guide| [guide.name, guide.id] } }, selected: params[:cloned_id]), prompt: 'Select guide to clone'

  %h2
    %i.fa.fa-map-marker
    Location
  .mui-textfield
    = react_component :LocationSearch, guide.location
  .mui--pull-right
    = form.submit 'Save', class: 'mui-btn mui-btn--raised mui-btn--primary'

